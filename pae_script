#!/bin/bash

options=$1
first=${options:0:1}

# global vars
openthread_output=openthread/output/cc2538/bin

if [[ $first != "-" ]]; then
  echo "
  ERROR: You need to indicate the options for the script
  Options: 
  c - compile from the source
  b - create bins from the compiled source
  f - flash all the boards with the indicated file (only name)
  Example calls:
  steps -cb : This call will compile the source and create the bins for
  every file
  steps -f ot-cli-ftd : This call will flash all the boards with the ot-cli-ftd.bin 
  "

  exit 1
fi

if [[ $options =~ "c" ]]; then
  echo "Call compile makefile"
  make -f openthread/examples/Makefile-cc2538 all
fi

# Create .bin
if [[ $options =~ "b" ]]; then
  echo "Creating bins"
  # Output folder
  openthread_output=openthread/output/cc2538/bin

  # First delete existing .bin files
  bin_files=$openthread_output/*.bin
  rm -rf $bin_files 

  # Then iterate for every file in the output folder
  files=$openthread_output/*
  for fn in $files; do
    echo "Creating "$fn".bin file"
    arm-none-eabi-objcopy -O binary $fn $fn.bin &
  done
fi

# Flash board/s
if [[ $options =~ "f" ]]; then

  # Check if file in args
  if [[ $# < 2 ]]; then
    echo "
ERROR: You need to pass the file to flash
Example:
steps -f ot-cli-ftd
    "
    exit 1
  fi

  # Assign arg to variable
  file=$2
  # Path to the flash file
  flash=$openthread_output/$file.bin

  # If the file doesn't exist throw error
  if ! [[ -f $flash ]]; then
    echo "ERROR: The file: "$flash" doesn't exist"
    exit 1
  fi
  
  if ! [[ -f /dev/ttyUSB* ]]; then
    echo "ERROR: The are no boards connected to ttyUSB*"
    exit 1
  fi

  echo "Flashing all the boards with the file: "$flash

  # Get boards connected
  boards=/dev/ttyUSB*
  for board in $boards; do
      echo "Flashing $board with $flash"
      # And flash the board
      python cc2538-bsl/cc2538-bsl.py -e -w -v -b 115200 -p $board -a 0x00200000 $flash &
  done
fi

exit 0